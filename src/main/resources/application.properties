#
# JDBC properties
#
spring.datasource.url=jdbc:mysql://localhost:3306/musician-trainer-directory?createDatabaseIfNotExist=true
spring.datasource.username=springstudent
spring.datasource.password=springstudent

#
# Configure JPA/Hibernate to auto create the tables
# By default, data.sql scripts get executed before the Hibernate is initialized.
#
## We need Hibernate to create our tables before inserting the data into them.
## To achieve this, we need to defer the initialization of our data source.
## We will use the below property to achieve this:
spring.jpa.defer-datasource-initialization=true
spring.datasource.initialization-mode=always
## Please note that for any script-based initialization, i.e. inserting data via data.sql
## or creating schema, we need to set the below property:
spring.sql.init.mode=always
#
### Hibernate ddl auto (create, create-drop, validate, update)
### the "create" config will always first drop the table and then create a new one on every app run
### the "update" config will keep the existing data in the table
spring.jpa.hibernate.ddl-auto=update
#
#### The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.dialect.storage_engine = innodb




# Add logging configs to display SQL statements
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE

# Turn off the Spring Boot banner
spring.main.banner-mode=off

# Reduce logging level. Set logging level to warn
logging.level.root=warn

# Show or not log for each sql query
spring.jpa.show-sql=true

#
# Log JDBC SQL statements
#
# Only use this for dev/testing
# DO NOT use for PRODUCTION since it will log user names
logging.level.org.springframework.jdbc.core=TRACE




